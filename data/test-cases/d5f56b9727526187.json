{
  "uid" : "d5f56b9727526187",
  "name" : "Click on confirm alert button",
  "fullName" : "tests.test_alerts.TestAlerts#test_click_confirm_accept_alert_button",
  "historyId" : "8f00399194036fe1648804f7506782a3",
  "time" : {
    "start" : 1738161697772,
    "stop" : 1738161725783,
    "duration" : 28011
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test_alerts.TestAlerts object at 0x7f0a819ea260>\n\n    @allure.title(\"Click on confirm alert button\")\n    @pytest.mark.smoke\n    def test_click_confirm_accept_alert_button(self):\n        self.alerts.open()\n        self.alerts.is_opened()\n        self.alerts.click_confirm_alert_button()\n>       self.alerts.check_opened_confirm_alert()\n\ntests/test_alerts.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/alerts.py:61: in check_opened_confirm_alert\n    self.alert_is_present()\nbase/base_page.py:161: in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"175951e3a2e5fd872b786904c4e526a0\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x7f0a819d6290>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1738161659320,
      "stop" : 1738161659409,
      "duration" : 89
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1738161697175,
      "stop" : 1738161697628,
      "duration" : 453
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1738161697628,
      "stop" : 1738161697771,
      "duration" : 143
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <test_alerts.TestAlerts object at 0x7f0a819ea260>\n\n    @allure.title(\"Click on confirm alert button\")\n    @pytest.mark.smoke\n    def test_click_confirm_accept_alert_button(self):\n        self.alerts.open()\n        self.alerts.is_opened()\n        self.alerts.click_confirm_alert_button()\n>       self.alerts.check_opened_confirm_alert()\n\ntests/test_alerts.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/alerts.py:61: in check_opened_confirm_alert\n    self.alert_is_present()\nbase/base_page.py:161: in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"175951e3a2e5fd872b786904c4e526a0\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x7f0a819d6290>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Open https://demoqa.com/alerts page",
      "time" : {
        "start" : 1738161697772,
        "stop" : 1738161710566,
        "duration" : 12794
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Page https://demoqa.com/alerts is opened",
      "time" : {
        "start" : 1738161710566,
        "stop" : 1738161710570,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false,
      "stepsCount" : 0
    }, {
      "name" : "Click on confirm_alert_button",
      "time" : {
        "start" : 1738161710570,
        "stop" : 1738161710715,
        "duration" : 145
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check if element located by ('xpath', \"//button[@id='confirmButton']\") is clickable",
        "time" : {
          "start" : 1738161710570,
          "stop" : 1738161710599,
          "duration" : 29
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "hasContent" : false,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    }, {
      "name" : "Check if confirm_alert_button alert opened",
      "time" : {
        "start" : 1738161710716,
        "stop" : 1738161725783,
        "duration" : 15067
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/pages/alerts.py\", line 61, in check_opened_confirm_alert\n    self.alert_is_present()\n  File \"/usr/workspace/base/base_page.py\", line 161, in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n  File \"/usr/local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Wait for alert to be present",
        "time" : {
          "start" : 1738161710716,
          "stop" : 1738161725782,
          "duration" : 15066
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
        "statusTrace" : "  File \"/usr/workspace/base/base_page.py\", line 161, in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n  File \"/usr/local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "hasContent" : true,
        "stepsCount" : 0
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : true,
      "stepsCount" : 1
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 6
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1738161725848,
      "stop" : 1738161725909,
      "duration" : 61
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Alerts, Frame & Windows  - Alerts"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_alerts"
  }, {
    "name" : "subSuite",
    "value" : "TestAlerts"
  }, {
    "name" : "host",
    "value" : "748f07639e20"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_alerts"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 5,
        "unknown" : 0,
        "total" : 7
      },
      "items" : [ {
        "uid" : "fd0bc3a8f49474a",
        "status" : "passed",
        "time" : {
          "start" : 1738147124879,
          "stop" : 1738147132237,
          "duration" : 7358
        }
      }, {
        "uid" : "dc7894a70f87e1e7",
        "status" : "passed",
        "time" : {
          "start" : 1738075436934,
          "stop" : 1738075439785,
          "duration" : 2851
        }
      }, {
        "uid" : "68e9880aa71e8113",
        "status" : "passed",
        "time" : {
          "start" : 1731657350333,
          "stop" : 1731657357541,
          "duration" : 7208
        }
      }, {
        "uid" : "5c94028085286bd",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1730874585211,
          "stop" : 1730874600641,
          "duration" : 15430
        }
      }, {
        "uid" : "70486a22ea941e20",
        "status" : "passed",
        "time" : {
          "start" : 1730834126127,
          "stop" : 1730834368273,
          "duration" : 242146
        }
      }, {
        "uid" : "703f27e8f12b5eab",
        "status" : "passed",
        "time" : {
          "start" : 1730114614025,
          "stop" : 1730114622289,
          "duration" : 8264
        }
      } ]
    },
    "tags" : [ "smoke" ]
  },
  "source" : "d5f56b9727526187.json",
  "parameterValues" : [ ]
}