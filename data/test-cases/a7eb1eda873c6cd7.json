{
  "uid" : "a7eb1eda873c6cd7",
  "name" : "Click on confirm alert button",
  "fullName" : "tests.test_alerts.TestAlerts#test_click_confirm_dismiss_alert_button",
  "historyId" : "35c6c9814a3c5781c670acc8c4bd88e3",
  "time" : {
    "start" : 1740845381181,
    "stop" : 1740845408708,
    "duration" : 27527
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test_alerts.TestAlerts object at 0x7efd15e5d150>\n\n    @allure.title(\"Click on confirm alert button\")\n    @pytest.mark.smoke\n    @pytest.mark.screenshot\n    def test_click_confirm_dismiss_alert_button(self):\n        self.alerts.open()\n        self.alerts.is_opened()\n        self.alerts.click_confirm_alert_button()\n>       self.alerts.check_opened_confirm_alert()\n\ntests/test_alerts.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/alerts.py:61: in check_opened_confirm_alert\n    self.alert_is_present()\nbase/base_page.py:168: in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"163bd82e1b74b10a48494799c5bca0b3\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x7efd15e41e10>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1740845381024,
      "stop" : 1740845381181,
      "duration" : 157
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1740845319022,
      "stop" : 1740845319110,
      "duration" : 88
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1740845380560,
      "stop" : 1740845381024,
      "duration" : 464
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <test_alerts.TestAlerts object at 0x7efd15e5d150>\n\n    @allure.title(\"Click on confirm alert button\")\n    @pytest.mark.smoke\n    @pytest.mark.screenshot\n    def test_click_confirm_dismiss_alert_button(self):\n        self.alerts.open()\n        self.alerts.is_opened()\n        self.alerts.click_confirm_alert_button()\n>       self.alerts.check_opened_confirm_alert()\n\ntests/test_alerts.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/alerts.py:61: in check_opened_confirm_alert\n    self.alert_is_present()\nbase/base_page.py:168: in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"163bd82e1b74b10a48494799c5bca0b3\")>\nmethod = <function alert_is_present.<locals>._predicate at 0x7efd15e41e10>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException",
    "steps" : [ {
      "name" : "Open https://demoqa.com/alerts page",
      "time" : {
        "start" : 1740845381181,
        "stop" : 1740845393492,
        "duration" : 12311
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Page https://demoqa.com/alerts is opened",
      "time" : {
        "start" : 1740845393492,
        "stop" : 1740845393497,
        "duration" : 5
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on confirm_alert_button",
      "time" : {
        "start" : 1740845393497,
        "stop" : 1740845393644,
        "duration" : 147
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check if element located by ('xpath', \"//button[@id='confirmButton']\") is clickable",
        "time" : {
          "start" : 1740845393497,
          "stop" : 1740845393527,
          "duration" : 30
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "Check if confirm_alert_button alert opened",
      "time" : {
        "start" : 1740845393644,
        "stop" : 1740845408707,
        "duration" : 15063
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/usr/workspace/pages/alerts.py\", line 61, in check_opened_confirm_alert\n    self.alert_is_present()\n  File \"/usr/workspace/base/base_page.py\", line 168, in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n  File \"/usr/local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ {
        "name" : "Wait for alert to be present",
        "time" : {
          "start" : 1740845393644,
          "stop" : 1740845408707,
          "duration" : 15063
        },
        "status" : "broken",
        "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
        "statusTrace" : "  File \"/usr/workspace/base/base_page.py\", line 168, in alert_is_present\n    return self.wait.until(EC.alert_is_present())\n  File \"/usr/local/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : true,
        "stepsCount" : 0,
        "hasContent" : true
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "2a0d6e5363374ccf",
      "name" : "screenshots/test_click_confirm_dismiss_alert_button_2025-03-01_18-10-08.png",
      "source" : "2a0d6e5363374ccf.attach",
      "type" : "image/png",
      "size" : 387507
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 6,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1740845409124,
      "stop" : 1740845409184,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Alerts, Frame & Windows  - Alerts"
  }, {
    "name" : "tag",
    "value" : "screenshot"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_alerts"
  }, {
    "name" : "subSuite",
    "value" : "TestAlerts"
  }, {
    "name" : "host",
    "value" : "cd3cee9dbd7e"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_alerts"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 2,
        "skipped" : 0,
        "passed" : 8,
        "unknown" : 0,
        "total" : 10
      },
      "items" : [ {
        "uid" : "79eff1884109b368",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message: timeout: Timed out receiving message from renderer: -0.000\n  (Session info: chrome=132.0.6834.83)",
        "time" : {
          "start" : 1740060628299,
          "stop" : 1740060928304,
          "duration" : 300005
        }
      }, {
        "uid" : "7e0fe0d51252bdd9",
        "status" : "passed",
        "time" : {
          "start" : 1738400604276,
          "stop" : 1738400607405,
          "duration" : 3129
        }
      }, {
        "uid" : "b6c9e0b659f2d628",
        "status" : "passed",
        "time" : {
          "start" : 1738161726521,
          "stop" : 1738161739923,
          "duration" : 13402
        }
      }, {
        "uid" : "cb32ea42c549ea44",
        "status" : "passed",
        "time" : {
          "start" : 1738147132709,
          "stop" : 1738147140059,
          "duration" : 7350
        }
      }, {
        "uid" : "d0c86852e789b9fc",
        "status" : "passed",
        "time" : {
          "start" : 1738075440244,
          "stop" : 1738075442992,
          "duration" : 2748
        }
      }, {
        "uid" : "a8d59b6c3cc530ba",
        "status" : "passed",
        "time" : {
          "start" : 1731657358042,
          "stop" : 1731657365168,
          "duration" : 7126
        }
      }, {
        "uid" : "f29f6acd99fb2348",
        "status" : "passed",
        "time" : {
          "start" : 1730874601164,
          "stop" : 1730874612267,
          "duration" : 11103
        }
      }, {
        "uid" : "6285b891c8fddea6",
        "status" : "passed",
        "time" : {
          "start" : 1730834368754,
          "stop" : 1730834615570,
          "duration" : 246816
        }
      }, {
        "uid" : "f09bde518909e3e0",
        "status" : "passed",
        "time" : {
          "start" : 1730114622770,
          "stop" : 1730114629998,
          "duration" : 7228
        }
      } ]
    },
    "tags" : [ "smoke", "screenshot" ]
  },
  "source" : "a7eb1eda873c6cd7.json",
  "parameterValues" : [ ]
}